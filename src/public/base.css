@font-face {
  font-family: "Roboto Condensed";
  src: url(./fonts/RobotoCondensed-VariableFont_wght.ttf);
}

@font-face {
  font-family: "Roboto Condensed Italic";
  src: url(./fonts/RobotoCondensed-Italic-VariableFont_wght.ttf);
}

@font-face {
  font-family: "Roboto Mono";
  src: url(./fonts/RobotoMono-VariableFont_wght.ttf);
}

:root {
  /* tailwind "stone" palette */
  --white1: #fafaf9;
  --white2: #f5f5f4;
  --white3: #d6d3d1;
  --black1: #1c1917;
  --black2: #292524;
  --black3: #57534e;

  /* html colors */
  --warning: crimson;
  --success: yellowgreen;
  --info: lightseagreen;

  --fontstack: Arial, Helvetica, sans-serif;
  --radius: 5px;
}

[data-theme="light"] {
  --fg: var(--black2);
  --bg: var(--white1);
  --bg2: var(--white2);
  --border: var(--white3);
  --color: oklch(from var(--fg) calc(l + 0.5) c h);
  .warning {
    --color: oklch(from var(--warning) calc(l + 0.125) c h);
  }
  .success {
    --color: oklch(from var(--success) l calc(c + 0.25) calc(h - 5));
  }
  .info {
    --color: var(--info);
  }
}

[data-theme="dark"] {
  --fg: var(--white3);
  --bg: var(--black2);
  --bg2: var(--black1);
  --border: var(--black3);
  --color: oklch(from var(--fg) calc(l - 0.375) c h);
  .warning {
    --color: var(--warning);
  }
  .success {
    --color: var(--success);
  }
  .info {
    --color: var(--info);
  }
}

* {
  transition: background-color 0.25s ease, border-color 0.25s ease;
}

body {
  color: var(--fg);
  background-color: var(--bg);
  font-family: "Roboto Condensed", var(--fontstack);
}

input,
button,
textarea,
select {
  font: inherit;
  appearance: none;
  border: none;
  background-color: transparent;
}

textarea {
  font-family: "Roboto Mono", monospace;
}

i {
  font-family: "Roboto Condensed Italic", var(--fontstack);
}

/* buttons */

button,
a[type="button"] {
  width: max-content;
  border-radius: var(--radius);
  font-size: 0.875rem;
  line-height: 1.5rem;
  text-decoration: none;
  padding: 0.25rem 0.75rem;
  transition: color 0.25s ease, background-color 0.25s ease, border 0.25s ease;
  background-color: transparent;
  color: var(--fg);
  font-weight: bold;

  border: 1px solid oklch(from var(--color) l c h / 0.75);
  background-color: oklch(from var(--color) l c h / 0.125);
  svg {
    fill: oklch(from var(--color) l c h / 0.75);
  }

  &:hover {
    border: 1px solid oklch(from var(--color) l c h / 1);
    background-color: oklch(from var(--color) l c h / 0.25);
    svg {
      fill: oklch(from var(--color) l c h / 1);
    }
  }

  span {
    min-width: max-content;
    white-space: nowrap;
  }

  svg {
    height: 1.25rem;
    width: 1.25rem;
    min-width: 1.25rem;
  }

  &[disabled] {
    opacity: 0.5;
  }

  &:not([disabled]):hover {
    cursor: pointer;
  }

  &:has(svg) {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: 0.375rem;
  }
}

/* etc */

a {
  color: var(--fg);
  font-weight: bold;
}

input {
  color: var(--fg);
  border: 1px solid var(--border);
  border-radius: var(--radius);
  width: 100%;
  padding: 0.25rem 0.5rem;
}

.alert {
  border: 1px solid oklch(from var(--color) l c h / 0.75);
  background-color: oklch(from var(--color) l c h / 0.125);
  svg {
    fill: oklch(from var(--color) l c h / 0.75);
  }
}
