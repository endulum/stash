generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id          Int         @id @default(autoincrement())
  username    String      @unique @db.VarChar(32)
  password    String?     @db.VarChar(255)
  githubUser  String?     @db.VarChar(255)
  githubId    Int?
  role        Role        @default(BASIC)
  files       File[]      @relation("authorFiles")
  directories Directory[] @relation("authorDirectories")
}

model Directory {
  id          String      @id @default(nanoid(6))
  name        String
  shareUntil  DateTime?
  files       File[]      @relation("directoryFiles")
  directories Directory[] @relation("parentDirectory")
  parent      Directory?  @relation("parentDirectory", fields: [parentId], references: [id], onDelete: Cascade)
  parentId    String?
  author      User        @relation("authorDirectories", fields: [authorId], references: [id], onDelete: Cascade)
  authorId    Int
}

model File {
  id          String     @id @default(nanoid(6))
  name        String
  ext         String?
  type        String
  size        Float
  url         String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime?
  directory   Directory? @relation("directoryFiles", fields: [directoryId], references: [id], onDelete: Cascade)
  directoryId String?
  author      User       @relation("authorFiles", fields: [authorId], references: [id], onDelete: Cascade)
  authorId    Int
}

enum Role {
  BASIC
  ADMIN
}
